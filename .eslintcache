[{"/Users/idf/Desktop/idf/miniprojects/yearlyphotobackpanel/src/index.js":"1","/Users/idf/Desktop/idf/miniprojects/yearlyphotobackpanel/src/App.js":"2","/Users/idf/Desktop/idf/miniprojects/yearlyphotobackpanel/src/reportWebVitals.js":"3","/Users/idf/Desktop/idf/miniprojects/yearlyphotobackpanel/src/database.js":"4"},{"size":500,"mtime":1607264937481,"results":"5","hashOfConfig":"6"},{"size":2937,"mtime":1608046881061,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607264937482,"results":"8","hashOfConfig":"6"},{"size":2138,"mtime":1607844482740,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1y37gp4",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/idf/Desktop/idf/miniprojects/yearlyphotobackpanel/src/index.js",[],["21","22"],"/Users/idf/Desktop/idf/miniprojects/yearlyphotobackpanel/src/App.js",["23","24"],"import React, {Component} from 'react';\nimport './App.scss';\nimport {Button} from '@material-ui/core';\nimport Database from './database.js'\n\nclass App extends Component {\n    state = {\n        images: [],\n        imageGrid: [],\n        voters: undefined,\n        votes: undefined,\n    }\n    getAllData = () => {\n        let images = [];\n        Database.getData().then(res => {\n            console.log(res);\n            res.forEach(item => {\n                if (item.item === undefined) {\n                    images.push(item);\n                } else if(item.item === 'user-list') {\n                    const votes = item.users.length;\n                    const voters = [];\n                    item.users.forEach(user => {\n                        if (!voters.includes(user)) {\n                            voters.push(user);\n                        }\n                    })\n                    this.setState({votes, voters: voters.length})\n                }\n            })\n            this.setState({images}, () => {\n                this.generateImages();\n            })\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n    generateImages = () => {\n        let imageGrid = [];\n        this.state.images.forEach(image => {\n            imageGrid.push(\n                <div className='image-box'>\n                    <img src={image.url}></img>\n                    <h3>{image.chooserCount}</h3>\n                </div>\n            )\n        })\n        this.setState({imageGrid}, () => {\n            this.sortArray();\n        });\n    }\n    sortArray = () => {\n        let imageGrid = [...this.state.imageGrid]; \n        let newImageGrid = [...imageGrid];\n        let imageNumbers = [];\n        imageGrid.forEach(image => {\n            imageNumbers.push(image.props.children[1].props.children)\n        })\n        imageNumbers.sort((a, b) => {\n            return b - a;\n        })\n        imageGrid.forEach(image => {\n            const imageNumber = image.props.children[1].props.children;\n            const index = imageNumbers.findIndex(number => {\n                return number === imageNumber;\n            })\n            newImageGrid.splice(index, 1, image);\n        })\n        console.log(newImageGrid);\n        this.setState({imageGrid: newImageGrid});\n    }\n    componentDidMount = () => {\n        this.getAllData();\n    }\n    render() {\n        return(\n            <div>\n                <div className='backpanel'>\n                    <h1>תוצאות - תמונת השנה</h1>\n                    <div className='summary'>\n                        <h3>סה״כ הצבעות: {this.state.votes}</h3>\n                        <h3>סה״כ מצביעים: {this.state.voters}</h3>\n                    </div>\n                    <div className='image-grid'>\n                        {this.state.imageGrid}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;","/Users/idf/Desktop/idf/miniprojects/yearlyphotobackpanel/src/reportWebVitals.js",[],"/Users/idf/Desktop/idf/miniprojects/yearlyphotobackpanel/src/database.js",["25"],"import axios from 'axios';\n\nconst baseURL = 'https://idf-api.azurewebsites.net';\n// const baseURL = 'http://localhost:5000';\n\nconst submitData = (object) => {\n    return new Promise(resolve => {\n        axios.post(`${baseURL}/database/add`, {\n            database: 'miniprojects',\n            collection: 'photoOfTheYear',\n            object,\n        }).then(res => {\n            resolve(res)\n        }).catch(error => {\n            console.log(error);\n        }); \n    })\n    \n}\nconst getData = (photoNumber) => {\n    return new Promise(resolve => {\n        axios.post(`${baseURL}/database/get`, {\n            database: 'miniprojects',\n            collection: 'photoOfTheYear',\n            query: {photoNumber}\n          })\n          .then(function (response) {\n            resolve(response.data);\n            \n          })\n          .catch(function (error) {\n            resolve(error);\n        });\n    })\n}\nconst updateData = (photoNumber, object) => {\n    return new Promise(resolve => {\n        axios.post(`${baseURL}/database/update`, {\n            database: 'miniprojects',\n            collection: 'photoOfTheYear',\n            query: {photoNumber},\n            object\n        }).then(res => {\n            resolve(res);\n        }).catch(error => {\n            resolve(error);\n        })\n    })\n}\nconst getUserList = () => {\n    return new Promise(resolve => {\n        axios.post(`${baseURL}/database/get`, {\n            database: 'miniprojects',\n            collection: 'photoOfTheYear',\n            query: {item: 'user-list'}\n        }).then(res => {\n            resolve(res.data);\n        }).catch(error => {\n            resolve(error);\n        })\n    })\n}\nconst updateUserList = (object) => {\n    return new Promise(resolve => {\n        axios.post(`${baseURL}/database/update`, {\n            database: 'miniprojects',\n            collection: 'photoOfTheYear',\n            query: {item: 'user-list'},\n            object\n        }).then(res => {\n            resolve(res)\n        }).catch(error => {\n            console.log(error);\n        })\n    })\n}\nexport default {submitData, getData, updateData, getUserList,  updateUserList};",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":3,"column":9,"nodeType":"32","messageId":"33","endLine":3,"endColumn":15},{"ruleId":"34","severity":1,"message":"35","line":43,"column":21,"nodeType":"36","endLine":43,"endColumn":42},{"ruleId":"37","severity":1,"message":"38","line":77,"column":1,"nodeType":"39","endLine":77,"endColumn":80},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]